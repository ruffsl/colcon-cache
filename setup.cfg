[metadata]
name = colcon-cache
version = attr: colcon_cache.__version__
url = https://colcon.readthedocs.io
project_urls =
    Changelog = https://github.com/ruffsl/colcon-cache/milestones?direction=desc&sort=due_date&state=closed
    GitHub = https://github.com/ruffsl/colcon-cache/
author = Ruffin White
author_email = roxfoxpox@gmail.com
maintainer = Ruffin White
maintainer_email = roxfoxpox@gmail.com
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Plugins
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Programming Language :: Python
    Topic :: Software Development :: Build Tools
license = Apache License, Version 2.0
description = Extension for colcon to cache the processing of packages.
long_description = file: README.md
long_description_content_type = text/markdown
keywords = colcon

[options]
python_requires = >=3.6
install_requires =
  colcon-core>=0.5.2
  dirhash
  GitPython
  scandir;platform_system=='Windows'
packages = find:
zip_safe = true

[options.extras_require]
test =
  colcon-defaults
  colcon-package-information>=0.3.3
  colcon-package-selection>=0.2.10
  colcon-recursive-crawl
  colcon-test-result>=0.3.8
  flake8>=3.6.0
  flake8-blind-except
  flake8-builtins
  flake8-class-newline
  flake8-comprehensions
  flake8-deprecated
  flake8-docstrings
  flake8-import-order
  flake8-quotes
  pep8-naming
  pylint
  pytest
  pytest-cov
  scspell3k>=2.2

[options.packages.find]
exclude = test

[tool:pytest]
filterwarnings =
    error
    ignore::DeprecationWarning:colcon_defaults:
    ignore::DeprecationWarning:flake8:
    ignore::DeprecationWarning:scantree.*:
    ignore:lib2to3 package is deprecated::scspell
    ignore::pytest.PytestUnraisableExceptionWarning
junit_suite_name = colcon-cache
markers =
    flake8
    linter

[options.entry_points]
colcon_core.event_handler =
    cache_lockfile = colcon_cache.event_handler.lockfile:LockfileEventHandler
colcon_core.extension_point =
    colcon_cache.subverb = colcon_cache.subverb:CacheSubverbExtensionPoint
    colcon_cache.task.lock = colcon_core.task:TaskExtensionPoint
    colcon_cache.verb_handler = colcon_cache.verb_handler:VerbHandlerExtensionPoint
colcon_core.verb =
    cache = colcon_cache.verb.cache:CacheVerb
colcon_core.package_augmentation =
    cache_dirhash = colcon_cache.package_augmentation.dirhash:DirhashPackageAugmentation
    cache_git = colcon_cache.package_augmentation.git:GitPackageAugmentation
colcon_core.package_selection =
    cache_key = colcon_cache.package_selection.key:KeyPackageSelection
    cache_modified = colcon_cache.package_selection.modified:ModifiedPackageSelection
    cache_valid = colcon_cache.package_selection.valid:ValidPackageSelection
colcon_cache.subverb =
    lock = colcon_cache.subverb.lock:LockCacheSubverb
colcon_cache.task.lock =
    dirhash = colcon_cache.task.lock.dirhash:DirhashLockTask
    git = colcon_cache.task.lock.git:GitLockTask
colcon_cache.verb_handler =
    build = colcon_cache.verb_handler.build:BuildVerbHandler
    cache = colcon_cache.verb_handler.cache:CacheVerbHandler
    list = colcon_cache.verb_handler.cache:CacheVerbHandler
    test = colcon_cache.verb_handler.test:TestVerbHandler

[flake8]
import-order-style = google

[coverage:run]
branch = True
source = colcon_cache

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain if tests don't hit defensive assertion code:
    assert False
    raise NotImplementedError()
    # Don't complain if non-runnable code isn't run:
    pass
